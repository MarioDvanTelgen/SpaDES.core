% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/downloadInputs.R
\name{prepInputs}
\alias{prepInputs}
\title{Download and optionally reproject, crop, mask raw data and output module inputs}
\usage{
prepInputs(targetFile, archive = NULL, alsoExtract = NULL, dataset = NULL,
  destinationPath = NULL, fun = "raster", pkg = "raster",
  studyArea = NULL, rasterToMatch = NULL, rasterInterpMethod = "bilinear",
  rasterDatatype = "INT2U", writeCropped = TRUE, addTagsByObject = NULL,
  quickCheck = FALSE, cacheTags = "", notOlderThan = NULL, ...)
}
\arguments{
\item{targetFile}{Character string giving the path to the eventual
file (raster, shapefile, csv, etc.) that will be
downloaded, extracted.}

\item{archive}{Optional character string giving the path of an archive
containing \code{targetFile}, or a vector giving a set of nested archives
(e.g., \code{c("xxx.tar", "inner.zip")}). If there is/are (an) inner archive(s),
but they are unknown, the function will try all until it finds the
\code{targetFile}}

\item{alsoExtract}{Optional character string naming files other than
\code{targetFile} that must be extracted from the \code{archive}.}

\item{dataset}{Optional character string representing the dataset of interest
for download. Allows for restricting the lookup for the url to a dataset,
thus avoiding filename collision.}

\item{destinationPath}{Character string of where to download to, and do
all writing of files in.}

\item{fun}{Character string indicating the function to use to load #' \code{targetFile}.}

\item{pkg}{Character string indicating the package in which to find \code{fun}.}

\item{studyArea}{Template \code{SpatialPolygons*} object used for reprojecting
and cropping.}

\item{rasterToMatch}{Template \code{Raster*} object used for reprojecting and
cropping.}

\item{rasterInterpMethod}{Method used to compute values for the new
\code{RasterLayer}. See \code{\link[raster]{projectRaster}}. Defaults to bilinear.}

\item{rasterDatatype}{Output data type. Passed to \code{\link[raster]{writeRaster}}}

\item{writeCropped}{Logical. Should the output be written to disk?}

\item{addTagsByObject}{Pass any object in there for which there is a
\code{.tagsByClass} function}

\item{quickCheck}{Logical. If \code{TRUE}, then all Caching that occurs will
be based on the much faster but less robust file.info. \code{FALSE},
the default, uses \code{\link[digest]{digest}}}

\item{cacheTags}{Character vector with Tags. These Tags will be added to the
repository along with the artifact.}

\item{notOlderThan}{load an artifact from the database only if it was created after notOlderThan.}

\item{...}{Passed to pkg::fun}
}
\description{
This function can be used to prepare module inputs from raw data. It
runs several other functions, conditionally and sequentially:
\code{downloadFromWebDB} or \code{downloadData},
\code{extractFromArchive}.  NOTE: This function is still experimental: use
with caution.
}
\author{
Eliot McIntire

Jean Marchal
}
